@model IEnumerable<StoreModels.Location>
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Authorization.Infrastructure
@inject IAuthorizationService AuthorizationService

@{
    ViewData["Title"] = "Index";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Locations</title>
</head>
<body>
<p>
    <a asp-action="Create">Create Your Own Shop</a>
</p>
<table class="table">
    <thead>
        <tr>
            @* <th> 
                @Html.DisplayNameFor(model => model.LocationID)
            </th> *@
            <th>
                @Html.DisplayNameFor(model => model.LocationName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Address)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            @* <td>
                @Html.DisplayFor(modelItem => item.LocationID)
            </td> *@
            <td>
                @Html.DisplayFor(modelItem => item.LocationName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Address)
            </td>
            <td>
                @Html.ActionLink("Shop", "Shop", new { id=item.LocationID})
                @if ((await AuthorizationService.AuthorizeAsync(User, item, new ClaimsAuthorizationRequirement("Owner", new List<string>{item.LocationID.ToString()}))).Succeeded)
                {
                   <text> | </text> @Html.ActionLink("Admin", "Admin", new { id = item.LocationID });
                }                
                
                @* @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })  *@
            </td>
        </tr>
}
    </tbody>
</table>
</body>
</html>
