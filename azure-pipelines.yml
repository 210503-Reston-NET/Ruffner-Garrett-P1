# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool: Default

variables:
  solution: '**/App/*.sln'
  buildPlatform: 'Any Cpu'
  buildConfiguration: 'Release'
  solution_main: 'WebUI'
  solution_root: 'App'

steps:

  - task: SonarCloudPrepare@1
    inputs:
      SonarCloud: 'Sonar-Cloud-Service'
      organization: '210503-reston-net'
      scannerMode: 'MSBuild'
      projectKey: '210503-Reston-NET_Ruffner-Garrett-P1'
      projectName: 'Ruffner-Garrett-P1'
      extraProperties: 'sonar.cs.opencover.reportsPaths=$(Build.SourcesDirectory)/**/coverage.opencover.xml'

# Restore, Build, Test, Deploy
  - task: DotNetCoreCLI@2
    displayName: Restore Project Dependencies
    inputs:
      command: 'restore'
      projects: '$(solution)'
      feedsToUse: 'select'
  
  - task: DotNetCoreCLI@2
    displayName: Build Projects
    inputs:
      command: 'build'
      projects: '$(solution)'
    
#V2
  - task: DotNetCoreCLI@2
    displayName: 'Run unit tests - $(buildConfiguration)'
    inputs:
      command: 'test'
      arguments: '--configuration $(buildConfiguration) /p:CollectCoverage=true "/p:CoverletOutputFormat=\"opencover,Cobertura\""'
      publishTestResults: true
      projects: '$(solution)'

  - task: PublishCodeCoverageResults@1
    displayName: 'Publish code coverage report'
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: '$(Build.SourcesDirectory)/**/coverage.cobertura.xml'
      reportDirectory: '$(Build.SourcesDirectory)/App/Tests/' 
  
#V1
  # - task: DotNetCoreCLI@2
  #   displayName: 'Run unit tests - $(buildConfiguration)'
  #   inputs:
  #     command: 'test'
  #     arguments: '--configuration $(buildConfiguration) /p:CollectCoverage=true "/p:CoverletOutputFormat=\"opencover,Cobertura\""'

  #     publishTestResults: true
  #     projects: '$(solution)'

  # - script: |
  #     /dotnetglobaltools/reportgenerator -reports:**/coverage.opencover.xml -targetdir:$(Build.SourcesDirectory)/CodeCoverage "-reporttypes:HtmlInline_AzurePipelines;Cobertura"
  #   displayName: 'Create code coverage report'

  # - task: PublishCodeCoverageResults@1
  #   displayName: 'Publish code coverage report'
  #   inputs:
  #     codeCoverageTool: Cobertura
  #     summaryFileLocation: '$(Build.SourcesDirectory)/CodeCoverage/*.xml'
  #     reportDirectory: '$(Build.SourcesDirectory)/CodeCoverage'


#V0
  # - task: DotNetCoreCLI@2
  #   displayName: Running Tests
  #   inputs:
  #     command: 'test'
  #     projects: '$(solution)'
  #     arguments: --configuration $(buildConfiguration) --collect "Code Coverage"
  # - task: PublishCodeCoverageResults@1
  #   displayName: Publish Code Coverage
  #   inputs:
  #     codeCoverageTool: 'Cobertura'
  #     summaryFileLocation: '**/corbertura/coverage.xml'

  - task: SonarCloudAnalyze@1
    displayName: Run Code Analysis
  - task: SonarCloudPublish@1
    displayName: Publish Code Analysis
  
  - task: DotNetCoreCLI@2
    displayName: Publish
    inputs:
      command: 'publish'
      publishWebProjects: false
      zipAfterPublish: true
      projects: '**/App/WebUI/*.csproj'

  - task: AzureRmWebAppDeployment@4
    inputs:
      ConnectionType: 'AzureRM'
      azureSubscription: 'Azure subscription 1(b9ea6d04-6500-4af6-adfa-84ac2185ff53)'
      appType: 'webAppLinux'
      WebAppName: 'watches-n-such'
      packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip'
      RuntimeStack: 'DOTNETCORE|5.0'

